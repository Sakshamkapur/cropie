{"version":3,"sources":["components/uploader.js","firebase/index.js","components/cropper.js","components/viewer.js","App.js","serviceWorker.js","index.js"],"names":["Uploader","props","useState","isdragOver","setIsDragOver","errorNotification","setError","image","useRef","setFile","setActiveScreen","validate","file","fileType","setTimeout","type","split","_URL","window","URL","webkitURL","img","Image","objectUrl","createObjectURL","onload","this","width","height","revokeObjectURL","src","dragOverClass","error","className","aria-hidden","ref","id","accept","onDrop","e","preventDefault","dataTransfer","files","onDragEnter","onDragOver","onDragLeave","onChange","target","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","options","initialX","initialY","Cropper","filename","x","y","coordinate","setCoordinate","activeTab","setActiveTab","mainImg","setImg","progress","setProgress","isUploading","setIsUploading","preview","useEffect","current","childNodes","node","getContext","clearRect","setAttribute","drawImage","dragHandlers","onDrag","data","Fragment","onClick","Object","keys","map","name","link","document","createElement","download","href","getElementById","toDataURL","click","canvas","toBlob","blob","File","put","on","snapshot","Math","round","bytesTransferred","totalBytes","alert","bounds","position","defaultPosition","alt","onLoad","offsetWidth","offsetHeight","appendChild","Viewer","images","setImages","a","arr","child","listAll","then","res","items","forEach","imgref","getDownloadURL","url","push","length","getImages","class","style","margin","App","activeScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7428fdda.chunk.js","sourcesContent":["import React,{useState,useRef} from 'react';\r\n\r\nexport default function Uploader(props){\r\n    var [isdragOver,setIsDragOver] = useState(false);\r\n    var [errorNotification,setError] = useState(null);\r\n    var image = useRef(null);\r\n    var {setFile,setActiveScreen} = props;\r\n\r\n    function handleDragEnter(e) {\r\n       e.preventDefault();\r\n    }\r\n    function handleDragOver(e) {\r\n        e.preventDefault();\r\n        if (!isdragOver) {\r\n            setIsDragOver(true)\r\n        }\r\n    }\r\n    function handleDragLeave(e) {\r\n        e.preventDefault();\r\n        setIsDragOver(false)\r\n    }\r\n    function handleDrop(e) {\r\n        e.preventDefault();\r\n        let file = e.dataTransfer.files[0];\r\n        \r\n        validate(file)\r\n    }\r\n\r\n    function handleAddImage(e) {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n        \r\n        validate(file)\r\n           \r\n    }\r\n\r\n    function validate(file){\r\n        var fileType;\r\n        if(!file){\r\n            setFile(null);\r\n            setError(\"No File Found!\");\r\n            setIsDragOver(false);\r\n            setTimeout(() => {\r\n                setError(null)\r\n            }, 3000);\r\n            return false;\r\n        }\r\n        fileType = file.type.split(\"/\")[0];\r\n        if(!fileType)return;\r\n        if (fileType !== \"image\") {\r\n            setFile(null);\r\n            setError(\"Please add an Image File\");\r\n            setIsDragOver(false);\r\n            setTimeout(() => {\r\n                setError(null)\r\n            }, 3000);\r\n            return false;\r\n        }\r\n        \r\n        var _URL = window.URL || window.webkitURL;\r\n        var img = new Image();\r\n        var objectUrl = _URL.createObjectURL(file);\r\n        img.onload = function () {\r\n            if(this.width !== 1024 || this.height != 1024){\r\n                setFile(null);\r\n                setIsDragOver(false);\r\n                setError(\"The Image is not 1024 x 1024\");\r\n                setTimeout(() => {\r\n                    setError(null)\r\n                }, 3000);\r\n                return false;\r\n            }else{\r\n                setFile(file);\r\n                setActiveScreen(1)\r\n                setIsDragOver(false);\r\n            }\r\n            _URL.revokeObjectURL(objectUrl);\r\n        }\r\n        img.src = objectUrl;\r\n    }\r\n    \r\n    let dragOverClass = isdragOver\r\n        ? `display-box drag-over`\r\n        : `display-box`;\r\n    \r\n    let error = errorNotification\r\n        ? <div className=\"error-notification\">\r\n            <p>{errorNotification}</p>\r\n        </div>\r\n        : null;\r\n       \r\n       \r\n    return (\r\n        \r\n        <div className=\"image-uploader-wrapper\">\r\n            <div className={dragOverClass}>\r\n                <div className=\"icon-text-box\">\r\n                    <div className=\"upload-icon\">\r\n                        <i className=\"fa fa-upload\" aria-hidden=\"true\" />\r\n                    </div>\r\n                    <div className=\"upload-text\">\r\n                        Drag an Image or Browse... \r\n                    </div>\r\n                    {error}\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={image}\r\n                        id=\"upload-image-input\"\r\n                        className=\"upload-image-input\"\r\n                        accept=\"image/*\"\r\n                        onDrop={handleDrop}\r\n                        onDragEnter={handleDragEnter}\r\n                        onDragOver={handleDragOver}\r\n                        onDragLeave={handleDragLeave}\r\n                        onChange={handleAddImage}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"rules\">\r\n                <p>*Please Make sure you are adding only one image (in case of multiple images selected the first one will be picked)</p>\r\n                <p>*Please Make sure that the Image is 1024 x 1024</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\n\r\n ","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAmBPSweNL9V83wOth9iWdHSllYjs-kKZw\",\r\n    authDomain: \"imager-f5919.firebaseapp.com\",\r\n    databaseURL: \"https://imager-f5919.firebaseio.com\",\r\n    projectId: \"imager-f5919\",\r\n    storageBucket: \"imager-f5919.appspot.com\",\r\n    messagingSenderId: \"135431153748\",\r\n    appId: \"1:135431153748:web:5f9df7c8696269b2ae25c1\",\r\n    measurementId: \"G-3NBYMSGWCB\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport {\r\n    storage, firebase as default\r\n}","import React,{ useState,useEffect,useRef} from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport {storage} from '../firebase';\r\n\r\nconst options={\r\n    \"vertical\":{\r\n      initialX:512-(365/2),\r\n      initialY:512-(450/2),\r\n      width: 365,\r\n      height: 450\r\n    },\r\n    \"horizontal\":{\r\n      initialX:512-(755/2),\r\n      initialY:512-(450/2),\r\n      width: 755,\r\n      height: 450\r\n    },\r\n    \"horizontal small\":{\r\n      initialX:512-(365/2),\r\n      initialY:512-(212/2),\r\n      width: 365,\r\n      height: 212\r\n    },\r\n    \"gallery\":{\r\n      initialX:512-(380/2),\r\n      initialY:512-(380/2),\r\n      width: 380,\r\n      height: 380\r\n    }\r\n}\r\nexport default function Cropper(props){\r\n    var {file,setFile, setActiveScreen} = props;\r\n\r\n    var [filename,setFileName] = useState(file?URL.createObjectURL(file):null);\r\n    var [coordinate,setCoordinate] = useState({x: options[\"vertical\"].initialX,y: options[\"vertical\"].initialY});\r\n    var [activeTab,setActiveTab] = useState(\"vertical\");\r\n    var [mainImg,setImg] = useState(null);\r\n    var [progress,setProgress] = useState(0);\r\n    var [isUploading,setIsUploading] = useState(false);\r\n    var preview = useRef(null);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!!preview.current.childNodes[0]){\r\n          var node = preview.current.childNodes[0].getContext('2d');\r\n          var width = options[activeTab].width;\r\n          var height = options[activeTab].height;\r\n          node.clearRect(0, 0, preview.current.childNodes[0].width, preview.current.childNodes[0].height);  \r\n          preview.current.childNodes[0].width = width;\r\n          preview.current.childNodes[0].height = height;\r\n          preview.current.childNodes[0].setAttribute('id',activeTab);\r\n          node.drawImage(mainImg, coordinate.x, coordinate.y, width, height, 0, 0,  width, height);\r\n        }\r\n      },[coordinate])\r\n      \r\n      function download(){\r\n        var link = document.createElement('a');\r\n        link.download = filename;\r\n        link.href = document.getElementById(activeTab).toDataURL()\r\n        link.click();\r\n      }\r\n      function getDimensions({target:img}){\r\n        var canvas = document.createElement('canvas')\r\n        \r\n        if(img.offsetWidth !== 1024 || img.offsetHeight !== 1024){\r\n          alert(\"Looks Like Image is not 1024 x 1024!!\")\r\n          setActiveScreen(0)\r\n        }\r\n        setImg(img)\r\n        var width = options[activeTab].width;\r\n        var height = options[activeTab].height;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        canvas.getContext('2d').drawImage(img, coordinate.x, coordinate.y, width, height, 0, 0, width, height);\r\n        canvas.setAttribute('id',activeTab);\r\n        preview.current.appendChild(canvas)\r\n      }\r\n    \r\n      function onDrag(e,data){\r\n        setCoordinate({x: data.x,y: data.y})\r\n      }\r\n      \r\n      function handleUpload (){\r\n        const canvas = preview.current.childNodes[0];\r\n        setIsUploading(true)\r\n        canvas.toBlob(function(blob) {\r\n          var width = options[activeTab].width;\r\n          var height = options[activeTab].height;\r\n          const image = new File([blob], file.name+\"(\"+width+\"x\"+height+\")\", blob)\r\n            const uploadTask = storage.ref(`images/${file.name+\"(\"+width+\"x\"+height+\")\"}`).put(image);\r\n            uploadTask.on('state_changed', \r\n            (snapshot) => {\r\n              // progrss function ....\r\n              const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n              setProgress(progress)\r\n            },(error) => {\r\n              alert(error)\r\n              setIsUploading(false)\r\n            },()=>{\r\n              setActiveScreen(2)\r\n              setIsUploading(false)\r\n            });\r\n        });\r\n      }\r\n    \r\n      const dragHandlers = {onDrag};\r\n      return (<React.Fragment>\r\n    \r\n        <div className=\"actions\">\r\n          <div>\r\n            <button className=\"btn danger\" onClick={()=>{setFile(null); setActiveScreen(0)}}>Remove</button>\r\n          </div>\r\n          \r\n          {Object.keys(options).map(name=>(\r\n            <button className={name === activeTab?\"btn mr active\":\"btn mr\"} onClick={()=>{setCoordinate({x:options[name].initialX,y:options[name].initialY}); setActiveTab(name) }} >{name}</button>\r\n          ))}\r\n\r\n          <div>\r\n            <button className=\"btn active mr\" onClick={()=>download()}>Download</button>\r\n            <button className=\"btn success mr\" onClick={handleUpload}>Upload {isUploading &&<span>{\" \"+progress+\"%\"}</span>}</button>\r\n            <button className=\"btn\" onClick={()=>setActiveScreen(2)}>View Images</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div>\r\n            <div className=\"media\">\r\n              <Draggable bounds=\"parent\" position={coordinate} defaultPosition={{x: options[activeTab].initialX, y: options[activeTab].initialY}} {...dragHandlers}>\r\n                <div className={activeTab}>\r\n                </div>\r\n              </Draggable>\r\n              <img src={filename} alt=\"\" onLoad={getDimensions} />\r\n            </div>\r\n          </div>\r\n          <div className=\"preview\" ref={preview}></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n}","import React,{ useState,useEffect } from 'react';\r\nimport {storage} from '../firebase';\r\n\r\nexport default function Viewer(props){\r\n    var [images,setImages] = useState([]);\r\n    var {setActiveScreen} = props;\r\n    \r\n    async function getImages(){\r\n        var arr = []\r\n        storage.ref().child('images/').listAll().then((res)=>{\r\n            res.items.forEach((imgref)=>{\r\n                imgref.getDownloadURL().then((url)=>{\r\n                    arr.push(url);\r\n                    if(res.items.length === arr.length){\r\n                        setImages(arr)\r\n                    }\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getImages();\r\n    },[])\r\n\r\n    return (<React.Fragment>\r\n        <div className=\"back\" onClick={()=>setActiveScreen(1)}>\r\n            <i class=\"fa fa-arrow-left\"></i>\r\n        </div>\r\n        <h3 style={{width: \"80vw\",margin: \"5% auto\"}}>Uploaded Images</h3>\r\n        <div className=\"masonry my2\">\r\n            {images.map((img)=>(\r\n                <div className=\"aspect\">\r\n                    <a download=\"sample.png\" target=\"_blank\" href={img}>\r\n                        <img src={img} />\r\n                    </a>\r\n                    {/* <a class=\"download\" href={img} target=\"_blank\" download>Download</a> */}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </React.Fragment>)\r\n}","import React,{useState} from 'react';\nimport Uploader from './components/uploader';\nimport Cropper from './components/cropper';\nimport Viewer from './components/viewer';\nimport './App.css';\n\nfunction App() {\n  var [activeScreen,setActiveScreen] = useState(0);\n  var [file,setFile] = useState(null);\n  switch(activeScreen){\n    case 0: return <Uploader setFile={setFile} setActiveScreen={setActiveScreen} />; break;\n    case 1: {\n      if(file) return <Cropper file={file} setFile={setFile} setActiveScreen={setActiveScreen} />\n      else{\n        setActiveScreen(0)\n      }\n      break;\n    }\n    case 2: return <Viewer setActiveScreen={setActiveScreen} />; break;\n    default: return <Uploader setFile={setFile} setActiveScreen={setActiveScreen} />; break;\n  }\n\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}